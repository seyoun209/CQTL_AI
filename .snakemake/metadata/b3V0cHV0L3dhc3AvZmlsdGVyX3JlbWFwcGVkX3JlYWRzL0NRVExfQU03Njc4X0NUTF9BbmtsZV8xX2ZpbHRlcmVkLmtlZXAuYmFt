{"version": null, "code": "gASVLQcAAAAAAAAoQxJ0AGQBfA58EWQCjQMBAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwHdmVyc2lvbpSMBHJ1bGWUjAljb25kYV9lbnaUjA9zaW5ndWxhcml0eV9pbWeUjBBzaW5ndWxhcml0eV9hcmdzlIwPdXNlX3Npbmd1bGFyaXR5lIwLZW52X21vZHVsZXOUjAxiZW5jaF9yZWNvcmSUjAVqb2JpZJSMCGlzX3NoZWxslIwPYmVuY2hfaXRlcmF0aW9ulIwPY2xlYW51cF9zY3JpcHRzlIwKc2hhZG93X2RpcpR0lF2UKE5Y/wUAAAogICAgICAgIG1vZHVsZSBhZGQgd2FzcC97cGFyYW1zLndhc3BfdmVyfQoKICAgICAgICBta2RpciAtcCBvdXRwdXQvd2FzcC9maWx0ZXJfcmVtYXBwZWRfcmVhZHMKCiAgICAgICAgaWYgW1sgInt3aWxkY2FyZHMuc2FtcGxlTmFtZX0iID09ICoiQ1RMIiogXV07IHRoZW4KICAgICAgICAgICAgc25wX3RhYj17aW5wdXQucGJzX3NucF90YWJ9CiAgICAgICAgICAgIHNucF9pbmRleD17aW5wdXQucGJzX3NucF9pbmRleH0KICAgICAgICAgICAgaGFwbG90eXBlcz17aW5wdXQucGJzX2hhcGxvdHlwZXN9CiAgICAgICAgICAgIHNhbXBsZV9pZD17aW5wdXQuc2FtcGxlX2lkc19wYnN9CiAgICAgICAgZWxpZiBbWyAie3dpbGRjYXJkcy5zYW1wbGVOYW1lfSIgPT0gKiJGTkYiKiBdXTsgdGhlbgogICAgICAgICAgICBzbnBfdGFiPXtpbnB1dC5mbmZfc25wX3RhYn0KICAgICAgICAgICAgc25wX2luZGV4PXtpbnB1dC5mbmZfc25wX2luZGV4fQogICAgICAgICAgICBoYXBsb3R5cGVzPXtpbnB1dC5mbmZfaGFwbG90eXBlc30KICAgICAgICAgICAgc2FtcGxlX2lkPXtpbnB1dC5zYW1wbGVfaWRzX2ZuZn0KICAgICAgICBlbHNlCiAgICAgICAgICAgIGVjaG8gIkVycm9yOiBTYW1wbGUgdHlwZSBub3QgcmVjb2duaXplZCBpbiB7d2lsZGNhcmRzLnNhbXBsZU5hbWV9IgogICAgICAgICAgICBleGl0IDEKICAgICAgICBmaQoKICAgICAgICAjIEFkZCBlcnJvciBjaGVja2luZyBoZXJlCiAgICAgICAgaWYgW1sgLXogIiRzbnBfdGFiIiBdXTsgdGhlbgogICAgICAgICAgICBlY2hvICJFcnJvcjogc25wX3RhYiBub3Qgc2V0IgogICAgICAgICAgICBleGl0IDEKICAgICAgICBmaQogICAgICAgIGlmIFtbIC16ICIkc25wX2luZGV4IiBdXTsgdGhlbgogICAgICAgICAgICBlY2hvICJFcnJvcjogc25wX2luZGV4IG5vdCBzZXQiCiAgICAgICAgICAgIGV4aXQgMQogICAgICAgIGZpCiAgICAgICAgaWYgW1sgLXogIiRoYXBsb3R5cGVzIiBdXTsgdGhlbgogICAgICAgICAgICBlY2hvICJFcnJvcjogaGFwbG90eXBlcyBub3Qgc2V0IgogICAgICAgICAgICBleGl0IDEKICAgICAgICBmaQogICAgICAgIGlmIFtbIC16ICIkc2FtcGxlX2lkIiBdXTsgdGhlbgogICAgICAgICAgICBlY2hvICJFcnJvcjogc2FtcGxlX2lkIG5vdCBzZXQiCiAgICAgICAgICAgIGV4aXQgMQogICAgICAgIGZpIAoKICAgICAgICAjIFRoZW4gcnVuIFdBU1AgY29tbWFuZAogICAgICAgIHB5dGhvbiB7cGFyYW1zLndhc3BfcGF0aH0vbWFwcGluZy9maW5kX2ludGVyc2VjdGluZ19zbnBzLnB5ICAgICAgICAgLS1pc19wYWlyZWRfZW5kICAgICAgICAgLS1pc19zb3J0ZWQgICAgICAgICAtLW91dHB1dF9kaXIgb3V0cHV0L3dhc3AvZmlsdGVyX3JlbWFwcGVkX3JlYWRzICAgICAgICAgLS1zbnBfdGFiICRzbnBfdGFiICAgICAgICAgLS1zbnBfaW5kZXggJHNucF9pbmRleCAgICAgICAgIC0taGFwbG90eXBlICRoYXBsb3R5cGVzICAgICAgICAgLS1zYW1wbGVzICRzYW1wbGVfaWQgICAgICAgICB7aW5wdXQuYmFtfSAyPiB7bG9nLmVycn0KCiAgICAgICAglGgPaBKGlGWMBXNoZWxslIWUdJQu", "rule": "find_intersecting_snps", "input": ["/work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7678_CTL_Ankle_1_filtered.bam", "output/wasp/fnf/haplotypes.h5", "output/wasp/fnf/snp_index.h5", "output/wasp/fnf/snp_tab.h5", "output/wasp/fnf_sample_ids.txt", "output/wasp/pbs/haplotypes.h5", "output/wasp/pbs/snp_index.h5", "output/wasp/pbs/snp_tab.h5", "output/wasp/pbs_sample_ids.txt"], "log": ["output/logs/find_intersecting_snps_pbs_CQTL_AM7678_CTL_Ankle_1.err"], "params": ["'/nas/longleaf/rhel8/apps/wasp/2023-02/WASP'", "'2023-02'"], "shellcmd": "\n        module add wasp/2023-02\n\n        mkdir -p output/wasp/filter_remapped_reads\n\n        if [[ \"CQTL_AM7678_CTL_Ankle_1\" == *\"CTL\"* ]]; then\n            snp_tab=output/wasp/pbs/snp_tab.h5\n            snp_index=output/wasp/pbs/snp_index.h5\n            haplotypes=output/wasp/pbs/haplotypes.h5\n            sample_id=output/wasp/pbs_sample_ids.txt\n        elif [[ \"CQTL_AM7678_CTL_Ankle_1\" == *\"FNF\"* ]]; then\n            snp_tab=output/wasp/fnf/snp_tab.h5\n            snp_index=output/wasp/fnf/snp_index.h5\n            haplotypes=output/wasp/fnf/haplotypes.h5\n            sample_id=output/wasp/fnf_sample_ids.txt\n        else\n            echo \"Error: Sample type not recognized in CQTL_AM7678_CTL_Ankle_1\"\n            exit 1\n        fi\n\n        # Add error checking here\n        if [[ -z \"$snp_tab\" ]]; then\n            echo \"Error: snp_tab not set\"\n            exit 1\n        fi\n        if [[ -z \"$snp_index\" ]]; then\n            echo \"Error: snp_index not set\"\n            exit 1\n        fi\n        if [[ -z \"$haplotypes\" ]]; then\n            echo \"Error: haplotypes not set\"\n            exit 1\n        fi\n        if [[ -z \"$sample_id\" ]]; then\n            echo \"Error: sample_id not set\"\n            exit 1\n        fi \n\n        # Then run WASP command\n        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7678_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7678_CTL_Ankle_1.err\n\n        ", "incomplete": false, "starttime": 1735104954.8130252, "endtime": 1735104994.253833, "job_hash": 2319568771144349791, "conda_env": null, "singularity_img_url": null}