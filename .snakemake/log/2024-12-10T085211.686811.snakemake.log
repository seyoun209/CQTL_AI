Building DAG of jobs...
Using shell: /usr/bin/bash
Provided cluster nodes: 150
Job counts:
	count	jobs
	1	all
	42	find_intersecting_snps
	43

[Tue Dec 10 08:52:13 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7711_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7711_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7711_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7711_CTL_Ankle_1.err
    jobid: 7
    wildcards: sampleName=CQTL_AM7711_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7711_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7711_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7711_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7711_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7711_CTL_Ankle_1.err

        
Submitted job 7 with external jobid '55511836'.

[Tue Dec 10 08:52:14 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7771_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7771_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7771_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7771_CTL_Ankle_1.err
    jobid: 29
    wildcards: sampleName=CQTL_AM7771_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7771_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7771_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7771_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7771_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7771_CTL_Ankle_1.err

        
Submitted job 29 with external jobid '55511837'.

[Tue Dec 10 08:52:15 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7775_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7775_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7775_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7775_CTL_Ankle_1.err
    jobid: 31
    wildcards: sampleName=CQTL_AM7775_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7775_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7775_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7775_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7775_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7775_CTL_Ankle_1.err

        
Submitted job 31 with external jobid '55511838'.

[Tue Dec 10 08:52:16 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7775_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7775_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7775_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7775_FNF_Ankle_1.err
    jobid: 32
    wildcards: sampleName=CQTL_AM7775_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7775_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7775_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7775_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7775_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7775_FNF_Ankle_1.err

        
Submitted job 32 with external jobid '55511839'.

[Tue Dec 10 08:52:17 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7785_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7785_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7785_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7785_CTL_Ankle_1.err
    jobid: 39
    wildcards: sampleName=CQTL_AM7785_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7785_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7785_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7785_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7785_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7785_CTL_Ankle_1.err

        
Submitted job 39 with external jobid '55511840'.

[Tue Dec 10 08:52:18 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7786_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7786_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7786_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7786_FNF_Ankle_1.err
    jobid: 42
    wildcards: sampleName=CQTL_AM7786_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7786_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7786_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7786_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7786_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7786_FNF_Ankle_1.err

        
Submitted job 42 with external jobid '55511841'.

[Tue Dec 10 08:52:19 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7677_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7677_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7677_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7677_FNF_Ankle_1.err
    jobid: 2
    wildcards: sampleName=CQTL_AM7677_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7677_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7677_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7677_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7677_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7677_FNF_Ankle_1.err

        
Submitted job 2 with external jobid '55511843'.

[Tue Dec 10 08:52:21 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7711_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7711_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7711_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7711_FNF_Ankle_1.err
    jobid: 8
    wildcards: sampleName=CQTL_AM7711_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7711_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7711_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7711_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7711_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7711_FNF_Ankle_1.err

        
Submitted job 8 with external jobid '55511844'.

[Tue Dec 10 08:52:22 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7717_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7717_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7717_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7717_CTL_Ankle_1.err
    jobid: 11
    wildcards: sampleName=CQTL_AM7717_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7717_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7717_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7717_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7717_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7717_CTL_Ankle_1.err

        
Submitted job 11 with external jobid '55511845'.

[Tue Dec 10 08:52:23 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7712_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7712_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7712_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7712_FNF_Ankle_1.err
    jobid: 10
    wildcards: sampleName=CQTL_AM7712_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7712_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7712_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7712_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7712_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7712_FNF_Ankle_1.err

        
Submitted job 10 with external jobid '55511846'.

[Tue Dec 10 08:52:24 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7769_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7769_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7769_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7769_FNF_Ankle_1.err
    jobid: 28
    wildcards: sampleName=CQTL_AM7769_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7769_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7769_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7769_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7769_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7769_FNF_Ankle_1.err

        
Submitted job 28 with external jobid '55511847'.

[Tue Dec 10 08:52:27 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7781_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7781_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7781_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7781_CTL_Ankle_1.err
    jobid: 37
    wildcards: sampleName=CQTL_AM7781_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7781_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7781_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7781_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7781_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7781_CTL_Ankle_1.err

        
Submitted job 37 with external jobid '55511848'.

[Tue Dec 10 08:52:28 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7679_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7679_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7679_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7679_FNF_Ankle_1.err
    jobid: 6
    wildcards: sampleName=CQTL_AM7679_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7679_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7679_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7679_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7679_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7679_FNF_Ankle_1.err

        
Submitted job 6 with external jobid '55511849'.

[Tue Dec 10 08:52:29 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7727_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7727_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7727_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7727_FNF_Ankle_1.err
    jobid: 16
    wildcards: sampleName=CQTL_AM7727_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7727_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7727_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7727_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7727_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7727_FNF_Ankle_1.err

        
Submitted job 16 with external jobid '55511850'.

[Tue Dec 10 08:52:30 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7769_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7769_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7769_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7769_CTL_Ankle_1.err
    jobid: 27
    wildcards: sampleName=CQTL_AM7769_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7769_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7769_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7769_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7769_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7769_CTL_Ankle_1.err

        
Submitted job 27 with external jobid '55511851'.

[Tue Dec 10 08:52:31 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7778_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7778_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7778_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7778_FNF_Ankle_1.err
    jobid: 34
    wildcards: sampleName=CQTL_AM7778_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7778_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7778_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7778_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7778_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7778_FNF_Ankle_1.err

        
Submitted job 34 with external jobid '55511852'.

[Tue Dec 10 08:52:32 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7780_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7780_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7780_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7780_CTL_Ankle_1.err
    jobid: 35
    wildcards: sampleName=CQTL_AM7780_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7780_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7780_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7780_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7780_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7780_CTL_Ankle_1.err

        
Submitted job 35 with external jobid '55511853'.

[Tue Dec 10 08:52:33 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7678_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7678_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7678_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7678_FNF_Ankle_1.err
    jobid: 4
    wildcards: sampleName=CQTL_AM7678_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7678_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7678_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7678_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7678_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7678_FNF_Ankle_1.err

        
Submitted job 4 with external jobid '55511854'.

[Tue Dec 10 08:52:34 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7754_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7754_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7754_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7754_FNF_Ankle_1.err
    jobid: 20
    wildcards: sampleName=CQTL_AM7754_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7754_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7754_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7754_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7754_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7754_FNF_Ankle_1.err

        
Submitted job 20 with external jobid '55511856'.

[Tue Dec 10 08:52:35 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7677_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7677_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7677_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7677_CTL_Ankle_1.err
    jobid: 1
    wildcards: sampleName=CQTL_AM7677_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7677_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7677_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7677_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7677_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7677_CTL_Ankle_1.err

        
Submitted job 1 with external jobid '55511857'.

[Tue Dec 10 08:52:36 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7726_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7726_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7726_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7726_FNF_Ankle_1.err
    jobid: 14
    wildcards: sampleName=CQTL_AM7726_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7726_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7726_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7726_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7726_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7726_FNF_Ankle_1.err

        
Submitted job 14 with external jobid '55511858'.

[Tue Dec 10 08:52:38 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7727_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7727_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7727_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7727_CTL_Ankle_1.err
    jobid: 15
    wildcards: sampleName=CQTL_AM7727_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7727_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7727_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7727_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7727_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7727_CTL_Ankle_1.err

        
Submitted job 15 with external jobid '55511859'.

[Tue Dec 10 08:52:39 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7765_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7765_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7765_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7765_CTL_Ankle_1.err
    jobid: 25
    wildcards: sampleName=CQTL_AM7765_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7765_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7765_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7765_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7765_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7765_CTL_Ankle_1.err

        
Submitted job 25 with external jobid '55511860'.

[Tue Dec 10 08:52:40 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7785_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7785_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7785_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7785_FNF_Ankle_1.err
    jobid: 40
    wildcards: sampleName=CQTL_AM7785_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7785_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7785_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7785_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7785_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7785_FNF_Ankle_1.err

        
Submitted job 40 with external jobid '55511861'.

[Tue Dec 10 08:52:41 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7678_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7678_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7678_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7678_CTL_Ankle_1.err
    jobid: 3
    wildcards: sampleName=CQTL_AM7678_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7678_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7678_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7678_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7678_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7678_CTL_Ankle_1.err

        
Submitted job 3 with external jobid '55511862'.

[Tue Dec 10 08:52:42 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7778_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7778_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7778_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7778_CTL_Ankle_1.err
    jobid: 33
    wildcards: sampleName=CQTL_AM7778_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7778_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7778_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7778_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7778_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7778_CTL_Ankle_1.err

        
Submitted job 33 with external jobid '55511863'.

[Tue Dec 10 08:52:44 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7781_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7781_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7781_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7781_FNF_Ankle_1.err
    jobid: 38
    wildcards: sampleName=CQTL_AM7781_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7781_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7781_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7781_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7781_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7781_FNF_Ankle_1.err

        
Submitted job 38 with external jobid '55511864'.

[Tue Dec 10 08:52:45 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7735_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7735_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7735_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7735_FNF_Ankle_1.err
    jobid: 18
    wildcards: sampleName=CQTL_AM7735_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7735_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7735_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7735_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7735_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7735_FNF_Ankle_1.err

        
Submitted job 18 with external jobid '55511865'.

[Tue Dec 10 08:52:46 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7771_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7771_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7771_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7771_FNF_Ankle_1.err
    jobid: 30
    wildcards: sampleName=CQTL_AM7771_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7771_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7771_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7771_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7771_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7771_FNF_Ankle_1.err

        
Submitted job 30 with external jobid '55511866'.

[Tue Dec 10 08:52:49 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7780_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7780_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7780_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7780_FNF_Ankle_1.err
    jobid: 36
    wildcards: sampleName=CQTL_AM7780_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7780_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7780_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7780_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7780_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7780_FNF_Ankle_1.err

        
Submitted job 36 with external jobid '55511867'.

[Tue Dec 10 08:52:50 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7726_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7726_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7726_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7726_CTL_Ankle_1.err
    jobid: 13
    wildcards: sampleName=CQTL_AM7726_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7726_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7726_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7726_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7726_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7726_CTL_Ankle_1.err

        
Submitted job 13 with external jobid '55511868'.

[Tue Dec 10 08:52:51 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7712_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7712_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7712_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7712_CTL_Ankle_1.err
    jobid: 9
    wildcards: sampleName=CQTL_AM7712_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7712_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7712_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7712_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7712_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7712_CTL_Ankle_1.err

        
Submitted job 9 with external jobid '55511869'.

[Tue Dec 10 08:52:52 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7755_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7755_FNF_Ankle_1.err
    jobid: 22
    wildcards: sampleName=CQTL_AM7755_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7755_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7755_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7755_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7755_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7755_FNF_Ankle_1.err

        
Submitted job 22 with external jobid '55511870'.

[Tue Dec 10 08:52:53 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7765_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7765_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7765_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7765_FNF_Ankle_1.err
    jobid: 26
    wildcards: sampleName=CQTL_AM7765_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7765_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7765_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7765_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7765_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7765_FNF_Ankle_1.err

        
Submitted job 26 with external jobid '55511871'.

[Tue Dec 10 08:52:54 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7763_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7763_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7763_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7763_CTL_Ankle_1.err
    jobid: 23
    wildcards: sampleName=CQTL_AM7763_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7763_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7763_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7763_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7763_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7763_CTL_Ankle_1.err

        
Submitted job 23 with external jobid '55511872'.

[Tue Dec 10 08:52:55 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7755_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7755_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7755_CTL_Ankle_1.err
    jobid: 21
    wildcards: sampleName=CQTL_AM7755_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7755_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7755_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7755_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7755_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7755_CTL_Ankle_1.err

        
Submitted job 21 with external jobid '55511873'.

[Tue Dec 10 08:52:56 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7763_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7763_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7763_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7763_FNF_Ankle_1.err
    jobid: 24
    wildcards: sampleName=CQTL_AM7763_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7763_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7763_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7763_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7763_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7763_FNF_Ankle_1.err

        
Submitted job 24 with external jobid '55511874'.

[Tue Dec 10 08:52:57 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7679_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7679_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7679_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7679_CTL_Ankle_1.err
    jobid: 5
    wildcards: sampleName=CQTL_AM7679_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7679_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7679_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7679_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7679_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7679_CTL_Ankle_1.err

        
Submitted job 5 with external jobid '55511875'.

[Tue Dec 10 08:52:58 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7786_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7786_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7786_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7786_CTL_Ankle_1.err
    jobid: 41
    wildcards: sampleName=CQTL_AM7786_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7786_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7786_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7786_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7786_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7786_CTL_Ankle_1.err

        
Submitted job 41 with external jobid '55511876'.

[Tue Dec 10 08:52:59 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7754_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7754_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7754_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7754_CTL_Ankle_1.err
    jobid: 19
    wildcards: sampleName=CQTL_AM7754_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7754_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7754_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7754_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7754_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7754_CTL_Ankle_1.err

        
Submitted job 19 with external jobid '55511877'.

[Tue Dec 10 08:53:01 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7735_CTL_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7735_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7735_CTL_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7735_CTL_Ankle_1.err
    jobid: 17
    wildcards: sampleName=CQTL_AM7735_CTL_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7735_CTL_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7735_CTL_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7735_CTL_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7735_CTL_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7735_CTL_Ankle_1.err

        
Submitted job 17 with external jobid '55511878'.

[Tue Dec 10 08:53:02 2024]
rule find_intersecting_snps:
    input: /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7717_FNF_Ankle_1_filtered.bam, output/wasp/pbs/snp_tab.h5, output/wasp/pbs/snp_index.h5, output/wasp/pbs/haplotypes.h5, output/wasp/fnf/snp_tab.h5, output/wasp/fnf/snp_index.h5, output/wasp/fnf/haplotypes.h5, output/wasp/pbs_sample_ids.txt, output/wasp/fnf_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7717_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7717_FNF_Ankle_1_filtered.remap.fq2.gz
    log: output/logs/find_intersecting_snps_pbs_CQTL_AM7717_FNF_Ankle_1.err
    jobid: 12
    wildcards: sampleName=CQTL_AM7717_FNF_Ankle_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

        if [[ "CQTL_AM7717_FNF_Ankle_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs/snp_tab.h5
            snp_index=output/wasp/pbs/snp_index.h5
            haplotypes=output/wasp/pbs/haplotypes.h5
            sample_id=output/wasp/pbs_sample_ids.txt
        elif [[ "CQTL_AM7717_FNF_Ankle_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf/snp_tab.h5
            snp_index=output/wasp/fnf/snp_index.h5
            haplotypes=output/wasp/fnf/haplotypes.h5
            sample_id=output/wasp/fnf_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7717_FNF_Ankle_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi 

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         /work/users/s/e/seyoun/CQTL_AI/output/filtered/CQTL_AM7717_FNF_Ankle_1_filtered.bam 2> output/logs/find_intersecting_snps_pbs_CQTL_AM7717_FNF_Ankle_1.err

        
Submitted job 12 with external jobid '55511879'.
[Tue Dec 10 10:10:56 2024]
Finished job 11.
1 of 43 steps (2%) done
[Tue Dec 10 10:58:41 2024]
Finished job 15.
2 of 43 steps (5%) done
[Tue Dec 10 11:06:36 2024]
Finished job 1.
3 of 43 steps (7%) done
[Tue Dec 10 11:33:09 2024]
Finished job 16.
4 of 43 steps (9%) done
[Tue Dec 10 11:36:29 2024]
Finished job 12.
5 of 43 steps (12%) done
[Tue Dec 10 11:37:21 2024]
Finished job 37.
6 of 43 steps (14%) done
[Tue Dec 10 11:46:04 2024]
Finished job 13.
7 of 43 steps (16%) done
[Tue Dec 10 11:46:21 2024]
Finished job 7.
8 of 43 steps (19%) done
[Tue Dec 10 11:47:37 2024]
Finished job 30.
9 of 43 steps (21%) done
[Tue Dec 10 11:47:45 2024]
Finished job 24.
10 of 43 steps (23%) done
[Tue Dec 10 11:54:42 2024]
Finished job 10.
11 of 43 steps (26%) done
[Tue Dec 10 11:55:31 2024]
Finished job 3.
12 of 43 steps (28%) done
[Tue Dec 10 11:57:30 2024]
Finished job 42.
13 of 43 steps (30%) done
[Tue Dec 10 12:03:33 2024]
Finished job 6.
14 of 43 steps (33%) done
[Tue Dec 10 12:08:46 2024]
Finished job 26.
15 of 43 steps (35%) done
[Tue Dec 10 12:17:11 2024]
Finished job 9.
16 of 43 steps (37%) done
[Tue Dec 10 12:17:30 2024]
Finished job 8.
17 of 43 steps (40%) done
[Tue Dec 10 12:18:39 2024]
Finished job 29.
18 of 43 steps (42%) done
[Tue Dec 10 12:18:50 2024]
Finished job 33.
19 of 43 steps (44%) done
[Tue Dec 10 12:23:26 2024]
Finished job 25.
20 of 43 steps (47%) done
[Tue Dec 10 12:24:33 2024]
Finished job 14.
21 of 43 steps (49%) done
[Tue Dec 10 12:29:50 2024]
Finished job 27.
22 of 43 steps (51%) done
[Tue Dec 10 12:35:36 2024]
Finished job 28.
23 of 43 steps (53%) done
[Tue Dec 10 12:37:36 2024]
Finished job 41.
24 of 43 steps (56%) done
[Tue Dec 10 12:41:56 2024]
Finished job 36.
25 of 43 steps (58%) done
[Tue Dec 10 12:42:02 2024]
Finished job 17.
26 of 43 steps (60%) done
[Tue Dec 10 12:43:47 2024]
Finished job 22.
27 of 43 steps (63%) done
[Tue Dec 10 12:46:26 2024]
Finished job 21.
28 of 43 steps (65%) done
[Tue Dec 10 12:48:04 2024]
Finished job 38.
29 of 43 steps (67%) done
[Tue Dec 10 12:50:56 2024]
Finished job 19.
30 of 43 steps (70%) done
[Tue Dec 10 12:52:28 2024]
Finished job 5.
31 of 43 steps (72%) done
[Tue Dec 10 12:58:00 2024]
Finished job 32.
32 of 43 steps (74%) done
[Tue Dec 10 12:59:26 2024]
Finished job 4.
33 of 43 steps (77%) done
[Tue Dec 10 13:00:44 2024]
Finished job 39.
34 of 43 steps (79%) done
[Tue Dec 10 13:02:18 2024]
Finished job 2.
35 of 43 steps (81%) done
[Tue Dec 10 13:02:31 2024]
Finished job 18.
36 of 43 steps (84%) done
[Tue Dec 10 13:04:46 2024]
Finished job 35.
37 of 43 steps (86%) done
[Tue Dec 10 13:07:50 2024]
Finished job 23.
38 of 43 steps (88%) done
[Tue Dec 10 13:10:46 2024]
Finished job 40.
39 of 43 steps (91%) done
[Tue Dec 10 13:21:22 2024]
Finished job 20.
40 of 43 steps (93%) done
[Tue Dec 10 13:28:38 2024]
Finished job 34.
41 of 43 steps (95%) done
[Tue Dec 10 14:19:07 2024]
Finished job 31.
42 of 43 steps (98%) done

[Tue Dec 10 14:19:08 2024]
localrule all:
    input: output/wasp/filter_remapped_reads/CQTL_AM7677_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7677_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7677_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7677_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7678_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7678_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7678_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7678_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7679_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7679_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7679_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7679_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7711_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7711_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7711_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7711_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7712_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7712_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7712_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7712_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7717_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7717_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7717_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7717_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7726_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7726_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7726_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7726_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7727_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7727_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7727_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7727_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7735_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7735_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7735_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7735_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7754_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7754_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7754_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7754_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7763_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7763_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7763_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7763_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7765_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7765_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7765_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7765_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7769_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7769_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7769_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7769_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7771_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7771_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7771_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7771_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7775_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7775_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7775_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7775_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7778_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7778_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7778_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7778_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7780_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7780_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7780_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7780_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7781_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7781_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7781_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7781_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7785_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7785_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7785_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7785_FNF_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7786_CTL_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7786_CTL_Ankle_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7786_FNF_Ankle_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7786_FNF_Ankle_1_filtered.remap.fq2.gz
    jobid: 0

[Tue Dec 10 14:19:08 2024]
Finished job 0.
43 of 43 steps (100%) done
Complete log: /work/users/s/e/seyoun/CQTL_AI/.snakemake/log/2024-12-10T085211.686811.snakemake.log
