Building DAG of jobs...
Using shell: /usr/bin/bash
Provided cluster nodes: 100
Job counts:
	count	jobs
	1	all_subset
	6	filter_remapped_reads
	6	find_intersecting_snps
	6	merge
	6	remap_wasp_reads
	6	rmDupWASP
	6	run_ataqv_subset
	1	snp2h5
	38

[Tue Dec 24 10:07:08 2024]
rule snp2h5:
    input: /work/users/s/e/seyoun/CQTL_AI/output/geno/pbs_geno_other/pbs.rename.vcf.gz, /work/users/s/e/seyoun/CQTL_AI/output/geno/fnf_geno_other/fnf.rename.vcf.gz, output/wasp/pbs_subset_sample_ids.txt, output/wasp/fnf_subset_sample_ids.txt
    output: output/wasp/pbs_rep/haplotypes.h5, output/wasp/pbs_rep/snp_index.h5, output/wasp/pbs_rep/snp_tab.h5, output/wasp/fnf_rep/haplotypes.h5, output/wasp/fnf_rep/snp_index.h5, output/wasp/fnf_rep/snp_tab.h5
    log: output/logs/pbs_rep_snp2h5.err, output/logs/fnf_rep_snp2h5.err
    jobid: 64


        module add wasp/2023-02
        mkdir -p output/wasp/pbs_rep output/wasp/fnf_rep

        # Process PBS VCF
        /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/snp2h5/snp2h5         --chrom /proj/phanstiel_lab/References/chromSizes/hg38_chromSizes_filt.txt         --format vcf         --haplotype output/wasp/pbs_rep/haplotypes.h5         --snp_index output/wasp/pbs_rep/snp_index.h5         --snp_tab output/wasp/pbs_rep/snp_tab.h5         /work/users/s/e/seyoun/CQTL_AI/output/geno/pbs_geno_other/pbs.rename.vcf.gz 2> output/logs/pbs_rep_snp2h5.err

        # Process FNF VCF
        /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/snp2h5/snp2h5         --chrom /proj/phanstiel_lab/References/chromSizes/hg38_chromSizes_filt.txt         --format vcf         --haplotype output/wasp/fnf_rep/haplotypes.h5         --snp_index output/wasp/fnf_rep/snp_index.h5         --snp_tab output/wasp/fnf_rep/snp_tab.h5         /work/users/s/e/seyoun/CQTL_AI/output/geno/fnf_geno_other/fnf.rename.vcf.gz 2> output/logs/fnf_rep_snp2h5.err
        
Submitted job 64 with external jobid '56351478'.
[Tue Dec 24 11:11:35 2024]
Finished job 64.
1 of 38 steps (3%) done

[Tue Dec 24 11:11:40 2024]
rule find_intersecting_snps:
    input: output/align/CQTL_AM7754_CTL_Ankle_replicate_RG.bam, output/wasp/pbs_rep/snp_tab.h5, output/wasp/pbs_rep/snp_index.h5, output/wasp/pbs_rep/haplotypes.h5, output/wasp/fnf_rep/snp_tab.h5, output/wasp/fnf_rep/snp_index.h5, output/wasp/fnf_rep/haplotypes.h5, output/wasp/pbs_subset_sample_ids.txt, output/wasp/fnf_subset_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7754_CTL_Ankle_replicate_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7754_CTL_Ankle_replicate_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7754_CTL_Ankle_replicate_filtered.to.remap.bam, output/wasp/filter_remapped_reads/CQTL_AM7754_CTL_Ankle_replicate_filtered.keep.bam
    log: output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7754_CTL_Ankle_replicate.err
    jobid: 54
    wildcards: sampleName=CQTL_AM7754_CTL_Ankle_replicate
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

                if [[ "CQTL_AM7754_CTL_Ankle_replicate" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs_rep/snp_tab.h5
            snp_index=output/wasp/pbs_rep/snp_index.h5
            haplotypes=output/wasp/pbs_rep/haplotypes.h5
            sample_id=output/wasp/pbs_subset_sample_ids.txt
        elif [[ "CQTL_AM7754_CTL_Ankle_replicate" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf_rep/snp_tab.h5
            snp_index=output/wasp/fnf_rep/snp_index.h5
            haplotypes=output/wasp/fnf_rep/haplotypes.h5
            sample_id=output/wasp/fnf_subset_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7754_CTL_Ankle_replicate"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         output/align/CQTL_AM7754_CTL_Ankle_replicate_RG.bam 2> output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7754_CTL_Ankle_replicate.err

        
Submitted job 54 with external jobid '56352335'.

[Tue Dec 24 11:11:45 2024]
rule find_intersecting_snps:
    input: output/align/CQTL_AM7755_CTL_Ankle_replicate_RG.bam, output/wasp/pbs_rep/snp_tab.h5, output/wasp/pbs_rep/snp_index.h5, output/wasp/pbs_rep/haplotypes.h5, output/wasp/fnf_rep/snp_tab.h5, output/wasp/fnf_rep/snp_index.h5, output/wasp/fnf_rep/haplotypes.h5, output/wasp/pbs_subset_sample_ids.txt, output/wasp/fnf_subset_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7755_CTL_Ankle_replicate_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_CTL_Ankle_replicate_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_CTL_Ankle_replicate_filtered.to.remap.bam, output/wasp/filter_remapped_reads/CQTL_AM7755_CTL_Ankle_replicate_filtered.keep.bam
    log: output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7755_CTL_Ankle_replicate.err
    jobid: 56
    wildcards: sampleName=CQTL_AM7755_CTL_Ankle_replicate
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

                if [[ "CQTL_AM7755_CTL_Ankle_replicate" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs_rep/snp_tab.h5
            snp_index=output/wasp/pbs_rep/snp_index.h5
            haplotypes=output/wasp/pbs_rep/haplotypes.h5
            sample_id=output/wasp/pbs_subset_sample_ids.txt
        elif [[ "CQTL_AM7755_CTL_Ankle_replicate" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf_rep/snp_tab.h5
            snp_index=output/wasp/fnf_rep/snp_index.h5
            haplotypes=output/wasp/fnf_rep/haplotypes.h5
            sample_id=output/wasp/fnf_subset_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7755_CTL_Ankle_replicate"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         output/align/CQTL_AM7755_CTL_Ankle_replicate_RG.bam 2> output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7755_CTL_Ankle_replicate.err

        
Submitted job 56 with external jobid '56352336'.

[Tue Dec 24 11:11:50 2024]
rule find_intersecting_snps:
    input: output/align/CQTL_AM7778FE_CTL_Femur_1_RG.bam, output/wasp/pbs_rep/snp_tab.h5, output/wasp/pbs_rep/snp_index.h5, output/wasp/pbs_rep/haplotypes.h5, output/wasp/fnf_rep/snp_tab.h5, output/wasp/fnf_rep/snp_index.h5, output/wasp/fnf_rep/haplotypes.h5, output/wasp/pbs_subset_sample_ids.txt, output/wasp/fnf_subset_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7778FE_CTL_Femur_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7778FE_CTL_Femur_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7778FE_CTL_Femur_1_filtered.to.remap.bam, output/wasp/filter_remapped_reads/CQTL_AM7778FE_CTL_Femur_1_filtered.keep.bam
    log: output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7778FE_CTL_Femur_1.err
    jobid: 52
    wildcards: sampleName=CQTL_AM7778FE_CTL_Femur_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

                if [[ "CQTL_AM7778FE_CTL_Femur_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs_rep/snp_tab.h5
            snp_index=output/wasp/pbs_rep/snp_index.h5
            haplotypes=output/wasp/pbs_rep/haplotypes.h5
            sample_id=output/wasp/pbs_subset_sample_ids.txt
        elif [[ "CQTL_AM7778FE_CTL_Femur_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf_rep/snp_tab.h5
            snp_index=output/wasp/fnf_rep/snp_index.h5
            haplotypes=output/wasp/fnf_rep/haplotypes.h5
            sample_id=output/wasp/fnf_subset_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7778FE_CTL_Femur_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         output/align/CQTL_AM7778FE_CTL_Femur_1_RG.bam 2> output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7778FE_CTL_Femur_1.err

        
Submitted job 52 with external jobid '56352337'.

[Tue Dec 24 11:11:55 2024]
rule find_intersecting_snps:
    input: output/align/CQTL_AM7778FE_FNF_Femur_1_RG.bam, output/wasp/pbs_rep/snp_tab.h5, output/wasp/pbs_rep/snp_index.h5, output/wasp/pbs_rep/haplotypes.h5, output/wasp/fnf_rep/snp_tab.h5, output/wasp/fnf_rep/snp_index.h5, output/wasp/fnf_rep/haplotypes.h5, output/wasp/pbs_subset_sample_ids.txt, output/wasp/fnf_subset_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7778FE_FNF_Femur_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7778FE_FNF_Femur_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7778FE_FNF_Femur_1_filtered.to.remap.bam, output/wasp/filter_remapped_reads/CQTL_AM7778FE_FNF_Femur_1_filtered.keep.bam
    log: output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7778FE_FNF_Femur_1.err
    jobid: 46
    wildcards: sampleName=CQTL_AM7778FE_FNF_Femur_1
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

                if [[ "CQTL_AM7778FE_FNF_Femur_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs_rep/snp_tab.h5
            snp_index=output/wasp/pbs_rep/snp_index.h5
            haplotypes=output/wasp/pbs_rep/haplotypes.h5
            sample_id=output/wasp/pbs_subset_sample_ids.txt
        elif [[ "CQTL_AM7778FE_FNF_Femur_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf_rep/snp_tab.h5
            snp_index=output/wasp/fnf_rep/snp_index.h5
            haplotypes=output/wasp/fnf_rep/haplotypes.h5
            sample_id=output/wasp/fnf_subset_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7778FE_FNF_Femur_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         output/align/CQTL_AM7778FE_FNF_Femur_1_RG.bam 2> output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7778FE_FNF_Femur_1.err

        
Submitted job 46 with external jobid '56352388'.

[Tue Dec 24 11:12:00 2024]
rule find_intersecting_snps:
    input: output/align/CQTL_AM7755_FNF_Ankle_replicate_RG.bam, output/wasp/pbs_rep/snp_tab.h5, output/wasp/pbs_rep/snp_index.h5, output/wasp/pbs_rep/haplotypes.h5, output/wasp/fnf_rep/snp_tab.h5, output/wasp/fnf_rep/snp_index.h5, output/wasp/fnf_rep/haplotypes.h5, output/wasp/pbs_subset_sample_ids.txt, output/wasp/fnf_subset_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_replicate_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_replicate_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_replicate_filtered.to.remap.bam, output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_replicate_filtered.keep.bam
    log: output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7755_FNF_Ankle_replicate.err
    jobid: 50
    wildcards: sampleName=CQTL_AM7755_FNF_Ankle_replicate
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

                if [[ "CQTL_AM7755_FNF_Ankle_replicate" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs_rep/snp_tab.h5
            snp_index=output/wasp/pbs_rep/snp_index.h5
            haplotypes=output/wasp/pbs_rep/haplotypes.h5
            sample_id=output/wasp/pbs_subset_sample_ids.txt
        elif [[ "CQTL_AM7755_FNF_Ankle_replicate" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf_rep/snp_tab.h5
            snp_index=output/wasp/fnf_rep/snp_index.h5
            haplotypes=output/wasp/fnf_rep/haplotypes.h5
            sample_id=output/wasp/fnf_subset_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7755_FNF_Ankle_replicate"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         output/align/CQTL_AM7755_FNF_Ankle_replicate_RG.bam 2> output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7755_FNF_Ankle_replicate.err

        
Submitted job 50 with external jobid '56352390'.

[Tue Dec 24 11:12:05 2024]
rule find_intersecting_snps:
    input: output/align/CQTL_AM7754_FNF_Ankle_replicate_RG.bam, output/wasp/pbs_rep/snp_tab.h5, output/wasp/pbs_rep/snp_index.h5, output/wasp/pbs_rep/haplotypes.h5, output/wasp/fnf_rep/snp_tab.h5, output/wasp/fnf_rep/snp_index.h5, output/wasp/fnf_rep/haplotypes.h5, output/wasp/pbs_subset_sample_ids.txt, output/wasp/fnf_subset_sample_ids.txt
    output: output/wasp/filter_remapped_reads/CQTL_AM7754_FNF_Ankle_replicate_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7754_FNF_Ankle_replicate_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7754_FNF_Ankle_replicate_filtered.to.remap.bam, output/wasp/filter_remapped_reads/CQTL_AM7754_FNF_Ankle_replicate_filtered.keep.bam
    log: output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7754_FNF_Ankle_replicate.err
    jobid: 48
    wildcards: sampleName=CQTL_AM7754_FNF_Ankle_replicate
    threads: 4


        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

                if [[ "CQTL_AM7754_FNF_Ankle_replicate" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs_rep/snp_tab.h5
            snp_index=output/wasp/pbs_rep/snp_index.h5
            haplotypes=output/wasp/pbs_rep/haplotypes.h5
            sample_id=output/wasp/pbs_subset_sample_ids.txt
        elif [[ "CQTL_AM7754_FNF_Ankle_replicate" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf_rep/snp_tab.h5
            snp_index=output/wasp/fnf_rep/snp_index.h5
            haplotypes=output/wasp/fnf_rep/haplotypes.h5
            sample_id=output/wasp/fnf_subset_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7754_FNF_Ankle_replicate"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         output/align/CQTL_AM7754_FNF_Ankle_replicate_RG.bam 2> output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7754_FNF_Ankle_replicate.err

        
Submitted job 48 with external jobid '56352391'.
[Tue Dec 24 13:45:15 2024]
Error in rule find_intersecting_snps:
    jobid: 52
    output: output/wasp/filter_remapped_reads/CQTL_AM7778FE_CTL_Femur_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7778FE_CTL_Femur_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7778FE_CTL_Femur_1_filtered.to.remap.bam, output/wasp/filter_remapped_reads/CQTL_AM7778FE_CTL_Femur_1_filtered.keep.bam
    log: output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7778FE_CTL_Femur_1.err (check log file(s) for error message)
    shell:
        
        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

                if [[ "CQTL_AM7778FE_CTL_Femur_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs_rep/snp_tab.h5
            snp_index=output/wasp/pbs_rep/snp_index.h5
            haplotypes=output/wasp/pbs_rep/haplotypes.h5
            sample_id=output/wasp/pbs_subset_sample_ids.txt
        elif [[ "CQTL_AM7778FE_CTL_Femur_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf_rep/snp_tab.h5
            snp_index=output/wasp/fnf_rep/snp_index.h5
            haplotypes=output/wasp/fnf_rep/haplotypes.h5
            sample_id=output/wasp/fnf_subset_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7778FE_CTL_Femur_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         output/align/CQTL_AM7778FE_CTL_Femur_1_RG.bam 2> output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7778FE_CTL_Femur_1.err

        
        (one of the commands exited with non-zero exit code; note that snakemake uses bash strict mode!)
    cluster_jobid: 56352337

Error executing rule find_intersecting_snps on cluster (jobid: 52, external: 56352337, jobscript: /work/users/s/e/seyoun/CQTL_AI/.snakemake/tmp.21bxrvjd/snakejob.find_intersecting_snps.52.sh). For error details see the cluster log and the log files of the involved rule(s).
[Tue Dec 24 14:49:46 2024]
Error in rule find_intersecting_snps:
    jobid: 46
    output: output/wasp/filter_remapped_reads/CQTL_AM7778FE_FNF_Femur_1_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7778FE_FNF_Femur_1_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7778FE_FNF_Femur_1_filtered.to.remap.bam, output/wasp/filter_remapped_reads/CQTL_AM7778FE_FNF_Femur_1_filtered.keep.bam
    log: output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7778FE_FNF_Femur_1.err (check log file(s) for error message)
    shell:
        
        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

                if [[ "CQTL_AM7778FE_FNF_Femur_1" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs_rep/snp_tab.h5
            snp_index=output/wasp/pbs_rep/snp_index.h5
            haplotypes=output/wasp/pbs_rep/haplotypes.h5
            sample_id=output/wasp/pbs_subset_sample_ids.txt
        elif [[ "CQTL_AM7778FE_FNF_Femur_1" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf_rep/snp_tab.h5
            snp_index=output/wasp/fnf_rep/snp_index.h5
            haplotypes=output/wasp/fnf_rep/haplotypes.h5
            sample_id=output/wasp/fnf_subset_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7778FE_FNF_Femur_1"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         output/align/CQTL_AM7778FE_FNF_Femur_1_RG.bam 2> output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7778FE_FNF_Femur_1.err

        
        (one of the commands exited with non-zero exit code; note that snakemake uses bash strict mode!)
    cluster_jobid: 56352388

Error executing rule find_intersecting_snps on cluster (jobid: 46, external: 56352388, jobscript: /work/users/s/e/seyoun/CQTL_AI/.snakemake/tmp.21bxrvjd/snakejob.find_intersecting_snps.46.sh). For error details see the cluster log and the log files of the involved rule(s).
[Tue Dec 24 15:20:54 2024]
Error in rule find_intersecting_snps:
    jobid: 50
    output: output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_replicate_filtered.remap.fq1.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_replicate_filtered.remap.fq2.gz, output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_replicate_filtered.to.remap.bam, output/wasp/filter_remapped_reads/CQTL_AM7755_FNF_Ankle_replicate_filtered.keep.bam
    log: output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7755_FNF_Ankle_replicate.err (check log file(s) for error message)
    shell:
        
        module add wasp/2023-02

        mkdir -p output/wasp/filter_remapped_reads

                if [[ "CQTL_AM7755_FNF_Ankle_replicate" == *"CTL"* ]]; then
            snp_tab=output/wasp/pbs_rep/snp_tab.h5
            snp_index=output/wasp/pbs_rep/snp_index.h5
            haplotypes=output/wasp/pbs_rep/haplotypes.h5
            sample_id=output/wasp/pbs_subset_sample_ids.txt
        elif [[ "CQTL_AM7755_FNF_Ankle_replicate" == *"FNF"* ]]; then
            snp_tab=output/wasp/fnf_rep/snp_tab.h5
            snp_index=output/wasp/fnf_rep/snp_index.h5
            haplotypes=output/wasp/fnf_rep/haplotypes.h5
            sample_id=output/wasp/fnf_subset_sample_ids.txt
        else
            echo "Error: Sample type not recognized in CQTL_AM7755_FNF_Ankle_replicate"
            exit 1
        fi

        # Add error checking here
        if [[ -z "$snp_tab" ]]; then
            echo "Error: snp_tab not set"
            exit 1
        fi
        if [[ -z "$snp_index" ]]; then
            echo "Error: snp_index not set"
            exit 1
        fi
        if [[ -z "$haplotypes" ]]; then
            echo "Error: haplotypes not set"
            exit 1
        fi
        if [[ -z "$sample_id" ]]; then
            echo "Error: sample_id not set"
            exit 1
        fi

        # Then run WASP command
        python /nas/longleaf/rhel8/apps/wasp/2023-02/WASP/mapping/find_intersecting_snps.py         --is_paired_end         --is_sorted         --output_dir output/wasp/filter_remapped_reads         --snp_tab $snp_tab         --snp_index $snp_index         --haplotype $haplotypes         --samples $sample_id         output/align/CQTL_AM7755_FNF_Ankle_replicate_RG.bam 2> output/logs/find_intersecting_snps_pbs_rep_CQTL_AM7755_FNF_Ankle_replicate.err

        
        (one of the commands exited with non-zero exit code; note that snakemake uses bash strict mode!)
    cluster_jobid: 56352390

Error executing rule find_intersecting_snps on cluster (jobid: 50, external: 56352390, jobscript: /work/users/s/e/seyoun/CQTL_AI/.snakemake/tmp.21bxrvjd/snakejob.find_intersecting_snps.50.sh). For error details see the cluster log and the log files of the involved rule(s).
